{"version":3,"file":"static/js/141.368c02be.chunk.js","mappings":"gSAGaA,EAAUC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8JASpBC,EAAQJ,EAAAA,GAAOK,MAAKC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,gHAOpBI,GAAOP,EAAAA,EAAAA,IAAOQ,EAAAA,IAAPR,CAAgBS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,8F,SCFpC,EAdkB,SAAHO,GAAuC,IAAjCC,EAAKD,EAALC,MAAOC,EAAQF,EAARE,SAAUC,EAAQH,EAARG,SACpC,OACEC,EAAAA,EAAAA,KAACf,EAAO,CAAAgB,UACNC,EAAAA,EAAAA,MAAA,QAAMH,SAAUA,EAASE,SAAA,EACvBD,EAAAA,EAAAA,KAACV,EAAK,CACJa,KAAK,OACLN,MAAOA,EACPC,SAAU,SAAAM,GAAC,OAAIN,EAASM,EAAEC,OAAOR,MAAM,KAEzCG,EAAAA,EAAAA,KAACP,EAAI,QAIb,E,iDCuIA,EA7Ie,WAAO,IAADa,EAAAC,EACnBC,GAA0BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,EAAqC,QAA5Bb,EAAGW,EAAaG,IAAI,gBAAQ,IAAAd,EAAAA,EAAI,GAC/Ce,GAA4BZ,EAAAA,EAAAA,UAAkC,QAA1BF,EAACU,EAAaG,IAAI,gBAAQ,IAAAb,EAAAA,EAAI,IAAGe,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAA9DE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAA8BhB,EAAAA,EAAAA,WAAS,GAAKiB,GAAAf,EAAAA,EAAAA,GAAAc,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0BpB,EAAAA,EAAAA,UAAS,IAAGqB,GAAAnB,EAAAA,EAAAA,GAAAkB,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA0BxB,EAAAA,EAAAA,UAAS,GAAEyB,GAAAvB,EAAAA,EAAAA,GAAAsB,EAAA,GAA9BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,IAGtBG,EAAAA,EAAAA,YAAU,WACRC,aAAaC,QAAQ,YAAa,EACpC,GAAG,KAEHF,EAAAA,EAAAA,YAAU,WACR,GAAe,KAAXd,EAAJ,CAGA,GAAc,IAAVY,EAAa,CAAC,IACDK,EAAS,eAAA5C,GAAA6C,EAAAA,EAAAA,GAAAC,IAAAA,MAAxB,SAAAC,IAAA,OAAAD,IAAAA,MAAA,SAAAE,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACE,KACEC,EAAAA,EAAAA,IAAmBxB,EAAQY,GAAOa,MAAK,SAAAC,GACrCjB,EAASiB,EAAKC,QAChB,GACF,CAAE,MAAOtC,GACPC,EAASD,EACX,CAAC,wBAAAgC,EAAAO,OAAA,GAAAR,EAAA,KACF,kBARuB,OAAA/C,EAAAwD,MAAC,KAADC,UAAA,KASxBb,GACF,CACA,GAAIL,EAAQ,EAAG,CAAC,IACCK,EAAS,eAAAc,GAAAb,EAAAA,EAAAA,GAAAC,IAAAA,MAAxB,SAAAa,IAAA,OAAAb,IAAAA,MAAA,SAAAc,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,OACE,KACEC,EAAAA,EAAAA,IAAmBxB,EAAQY,GAAOa,MAAK,SAAAC,GACrCjB,GAAS,SAAAyB,GAAC,SAAAC,QAAAC,EAAAA,EAAAA,GAAQF,IAACE,EAAAA,EAAAA,GAAKV,EAAKC,SAAO,GACtC,GACF,CAAE,MAAOtC,GACPC,EAASD,EACX,CAAC,wBAAA4C,EAAAL,OAAA,GAAAI,EAAA,KACF,kBARuB,OAAAD,EAAAF,MAAC,KAADC,UAAA,KASxBb,GACF,CAxBA,CA0BF,GAAG,CAACL,EAAOZ,KAEXc,EAAAA,EAAAA,YAAU,WACJlB,IAAcI,GAChBS,EAAS,GAEb,GAAG,CAACb,EAAWI,IAmBQ,IAAjBQ,EAAM6B,SACRb,EAAAA,EAAAA,IAAmBxB,EAAQY,GAAOa,MAAK,SAAAC,GACjClB,EAAM6B,SAAWX,EAAKY,eACxBjC,GAAW,EAEf,IAKJ,IAAMkC,EAA+B,IAAjB/B,EAAM6B,QAA2B,KAAXrC,GAA+B,KAAdJ,EACrD4C,EACa,IAAjBhC,EAAM6B,QAA0B,IAAVzB,GAAeZ,IAAWJ,GAAwB,KAAXI,EAEzDyC,EAAejC,EAAM6B,QAAU,GAAmB,KAAdzC,EAE1C,OACEjB,EAAAA,EAAAA,MAAA+D,EAAAA,SAAA,CAAAhE,SAAA,EACED,EAAAA,EAAAA,KAACkE,EAAS,CACRrE,MAAOsB,EACPrB,SA9BoB,SAAAqE,GAExBjD,EAD6B,KAAViD,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAEjD,EA4BMpE,SAtCe,SAAAqE,GACnBA,EAAMC,iBACN7C,EAAUL,GACViB,EAAS,EAEX,KAmCIpC,EAAAA,EAAAA,KAACsE,EAAAA,GAAO,CAACC,MAAO,CAAEC,WAAY,SAAUC,OAAQ,EAAGC,QAAS,GAAIzE,SAAC,kDAGhE6D,IACC9D,EAAAA,EAAAA,KAACsE,EAAAA,GAAO,CAAArE,SAAC,+CAKV+D,IACC9D,EAAAA,EAAAA,MAAA+D,EAAAA,SAAA,CAAAhE,SAAA,EACED,EAAAA,EAAAA,KAAC2E,EAAAA,EAAc,CACbC,WAAY7C,EAAM6B,OAClBd,KAzCY,WACpBV,GAAS,SAAAqB,GAAC,OAAIA,EAAI,CAAC,GACrB,EAwCUc,MAAO,CAAEM,SAAU,QACnBC,eAAgBC,KAAKC,MACnBC,OAAO3C,aAAa4C,QAAQ,cAE9BC,QAAQC,EAAAA,EAAAA,MACRzD,QAASA,EACT0D,QAAQrF,EAAAA,EAAAA,KAAA,MAAIuE,MAAO,CAAEe,UAAW,UAAWrF,SAAC,gBAC5CsF,YACEvF,EAAAA,EAAAA,KAAA,KAAGuE,MAAO,CAAEe,UAAW,UAAWrF,UAChCD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,mCAENA,UAEDD,EAAAA,EAAAA,KAACwF,EAAAA,EAAS,CAACC,OAAQ1D,EAAO2D,QAAS,kBAAMC,EAAAA,EAAAA,KAAUC,EAAAA,EAAAA,MAAY,OAEhEA,EAAAA,EAAAA,MAAc,MACb1F,EAAAA,EAAAA,MAAC2F,EAAAA,GAAI,CAACH,QAAS,kBAAMI,EAAAA,EAAAA,KAAW,EAAC7F,SAAA,CAAC,OAC7BD,EAAAA,EAAAA,KAAC+F,EAAAA,IAAS,CAACC,KAAM,WAM3BjC,IACC/D,EAAAA,EAAAA,KAACsE,EAAAA,GAAO,CAAArE,SAAC,iDAGA,OAAVW,IACCV,EAAAA,EAAAA,MAACoE,EAAAA,GAAO,CAAArE,SAAA,CAAC,qDAC4CW,EAAM,SAKnE,C","sources":["components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { HiSearch } from 'react-icons/hi';\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  margin-bottom: 10px;\n  margin-top: -20px;\n  text-transform: uppercase;\n  position: relative;\n`;\n\nexport const Input = styled.input`\n  padding: 4px 32px 4px 24px;\n  border-radius: 4px;\n  border: 1px solid #7c5400;\n  font: inherit;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  top: 6px;\n  right: 6px;\n`;\n","import { Wrapper, Input, Icon } from './SearchBox.styled';\nimport PropTypes from 'prop-types';\n\nconst SearchBox = ({ value, onChange, onSubmit }) => {\n  return (\n    <Wrapper>\n      <form onSubmit={onSubmit}>\n        <Input\n          type=\"text\"\n          value={value}\n          onChange={e => onChange(e.target.value)}\n        />\n        <Icon />\n      </form>\n    </Wrapper>\n  );\n};\nexport default SearchBox;\n\nSearchBox.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport SearchBox from 'components/SearchBox/SearchBox';\nimport { GoUp, Message } from './Movies.styled';\nimport { HiArrowUp } from 'react-icons/hi';\nimport { getSearchByKeyWord } from 'serviceAPI/fetch';\nimport MovieList from 'components/MovieList/MovieList';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { scrollPos, scrollTop, infiniteHeight, boxScroll } from 'utils/scroll';\n\nconst Movies = () => {\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n  const [search, setSearch] = useState(searchParams.get('query') ?? '');\n  const [hasMore, setHasMore] = useState(true);\n  const [movie, setMovie] = useState([]);\n  const [pages, setPages] = useState(1);\n  // const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    localStorage.setItem('scrollPos', 0);\n  }, []);\n\n  useEffect(() => {\n    if (search === '') {\n      return;\n    }\n    if (pages === 1) {\n      async function fetchData() {\n        try {\n          getSearchByKeyWord(search, pages).then(info => {\n            setMovie(info.results);\n          });\n        } catch (error) {\n          setError(error);\n        }\n      }\n      fetchData();\n    }\n    if (pages > 1) {\n      async function fetchData() {\n        try {\n          getSearchByKeyWord(search, pages).then(info => {\n            setMovie(i => [...i, ...info.results]);\n          });\n        } catch (error) {\n          setError(error);\n        }\n      }\n      fetchData();\n    }\n    // setLoading(false);\n  }, [pages, search]);\n\n  useEffect(() => {\n    if (movieName !== search) {\n      setMovie([]);\n    }\n  }, [movieName, search]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearch(movieName);\n    setPages(1);\n    // setLoading(true);\n  };\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  const fetchMoreData = () => {\n    setPages(i => i + 1);\n  };\n\n  const reachTheEnd = () => {\n    if (movie.length !== 0) {\n      getSearchByKeyWord(search, pages).then(info => {\n        if (movie.length === info.total_results) {\n          setHasMore(false);\n        }\n      });\n    }\n  };\n  reachTheEnd();\n\n  const firstRender = movie.length === 0 && search === '' && movieName === '';\n  const noResults =\n    movie.length === 0 && pages === 1 && search === movieName && search !== '';\n  // loading === false;\n  const goodResponse = movie.length >= 1 && movieName !== '';\n\n  return (\n    <>\n      <SearchBox\n        value={movieName}\n        onChange={updateQueryString}\n        onSubmit={handleSubmit}\n      />\n      <Message style={{ visibility: 'hidden', margin: 0, padding: 0 }}>\n        Find movie that you want to watch above......\n      </Message>\n      {firstRender && (\n        <Message>Find movie that you want to watch above...</Message>\n      )}\n\n      {/* {loading && <p>Loading...</p>} */}\n\n      {goodResponse && (\n        <>\n          <InfiniteScroll\n            dataLength={movie.length}\n            next={fetchMoreData}\n            style={{ overflow: 'auto' }}\n            initialScrollY={JSON.parse(\n              window.localStorage.getItem('scrollPos')\n            )}\n            height={infiniteHeight()}\n            hasMore={hasMore}\n            loader={<h4 style={{ textAlign: 'center' }}>Loading... </h4>}\n            endMessage={\n              <p style={{ textAlign: 'center' }}>\n                <b>Yay! You have seen it all ;D</b>\n              </p>\n            }\n          >\n            <MovieList movies={movie} onClick={() => scrollPos(boxScroll())} />\n          </InfiniteScroll>\n          {boxScroll() > 1000 && (\n            <GoUp onClick={() => scrollTop()}>\n              UP <HiArrowUp size={24} />\n            </GoUp>\n          )}\n        </>\n      )}\n\n      {noResults && (\n        <Message>Sorry, there are no movies with that name...</Message>\n      )}\n\n      {error !== null && (\n        <Message>\n          Something went wrong on API... The messege error `{error}`\n        </Message>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","Input","input","_templateObject2","Icon","HiSearch","_templateObject3","_ref","value","onChange","onSubmit","_jsx","children","_jsxs","type","e","target","_searchParams$get","_searchParams$get2","_useState","useState","_useState2","_slicedToArray","error","setError","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","movieName","get","_useState3","_useState4","search","setSearch","_useState5","_useState6","hasMore","setHasMore","_useState7","_useState8","movie","setMovie","_useState9","_useState10","pages","setPages","useEffect","localStorage","setItem","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","getSearchByKeyWord","then","info","results","stop","apply","arguments","_ref2","_callee2","_context2","i","concat","_toConsumableArray","length","total_results","firstRender","noResults","goodResponse","_Fragment","SearchBox","query","event","preventDefault","Message","style","visibility","margin","padding","InfiniteScroll","dataLength","overflow","initialScrollY","JSON","parse","window","getItem","height","infiniteHeight","loader","textAlign","endMessage","MovieList","movies","onClick","scrollPos","boxScroll","GoUp","scrollTop","HiArrowUp","size"],"sourceRoot":""}